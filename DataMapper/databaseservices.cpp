#include "databaseservices.h"
#include <QtCore/QUuid>
#include <QtCore/QFile>
#include <QtCore/QFileInfo>
#include <exception>

DatabaseServices::DatabaseServices()
{
}


DatabaseServices::~DatabaseServices()
{
}

bool DatabaseServices::IsSQLiteDB(const QString& filename) {

	const char* first16BytesOfSQLiteDB = "SQLite format 3";

	QFile file(filename);
	if (file.exists()) {
		
		if (file.open(QIODevice::ReadOnly)) {
			
			uchar* first16bytes = file.map(0, 16);
			file.close();

			return (memcmp(first16bytes, first16BytesOfSQLiteDB, 16) == 0);
		}
	}

	return false;
}

QString DatabaseServices::GetFormattedDBName(const QSqlDatabase& db) {

	QString databaseName = db.databaseName();

	if (db.driverName() == "QSQLITE") {
		QFileInfo fi(databaseName);
		return fi.baseName();
	}
	else {
		return databaseName;
	}
}

void DatabaseServices::RemoveAutoGeneratedTableNamesFromList(QStringList& list) {

	list.removeAll("sqlite_sequence");
}

QString DatabaseServices::GetQtDBType(SynGlyphX::Datasource::SourceType sourceType) {

	if (sourceType == SynGlyphX::Datasource::SQLITE3) {
		return "QSQLITE";
	}

	return "";
}