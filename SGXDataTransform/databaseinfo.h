///
/// SynGlyphX Holdings Incorporated ("COMPANY") CONFIDENTIAL
/// Copyright (c) 2013-2015 SynGlyphX Holdings Incorporated, All Rights Reserved.
///
/// NOTICE:  All information contained herein is, and remains the property of COMPANY. The intellectual and technical concepts contained
/// herein are proprietary to COMPANY and may be covered by U.S. and Foreign Patents, patents in process, and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material is strictly forbidden unless prior written permission is obtained
/// from COMPANY.  Access to the source code contained herein is hereby forbidden to anyone except current COMPANY employees, managers or contractors who have executed 
/// Confidentiality and Non-disclosure agreements explicitly covering such access.
///
/// The copyright notice above does not evidence any actual or intended publication or disclosure  of  this source code, which includes  
/// information that is confidential and/or proprietary, and is a trade secret, of  COMPANY.   ANY REPRODUCTION, MODIFICATION, DISTRIBUTION, PUBLIC  PERFORMANCE, 
/// OR PUBLIC DISPLAY OF OR THROUGH USE  OF THIS  SOURCE CODE  WITHOUT  THE EXPRESS WRITTEN CONSENT OF COMPANY IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE 
/// LAWS AND INTERNATIONAL TREATIES.  THE RECEIPT OR POSSESSION OF  THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR IMPLY ANY RIGHTS  
/// TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT  MAY DESCRIBE, IN WHOLE OR IN PART.                
///

#ifndef SYNGLYPHX_DATABASESEINFO_H
#define SYNGLYPHX_DATABASESEINFO_H

#include "sgxdatatransform_global.h"
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtSql/QSqlDatabase>
#include <QtSql/QSqlQuery>
#include <QtCore/QSharedPointer>
#include <boost/multi_index_container.hpp>
#include <boost/multi_index/random_access_index.hpp>
#include <boost/multi_index/ordered_index.hpp>
#include <boost/multi_index/identity.hpp>

namespace SynGlyphX {

	enum SourceDataFieldType {
		Numeric,
		Text,
		DateTime,
		Other
	};

	//typedef boost::multi_index_container<QString, boost::multi_index::indexed_by<boost::multi_index::random_access<>, boost::multi_index::ordered_unique<boost::multi_index::identity<QString>>>> TableColumns;
	typedef std::vector<std::pair<QString, SourceDataFieldType>> TableColumns;
	typedef QSharedPointer<QSqlQuery> SharedSQLQuery;

	class SGXDATATRANSFORM_EXPORT DatabaseInfo
	{
	public:
		DatabaseInfo();
		~DatabaseInfo();

		static bool IsSQLiteDB(const QString& filename);

		static QStringList GetListOfTablesWithoutAutogeneratedTables(const QSqlDatabase& db);
		static QStringList GetListOfTablesWithoutAutogeneratedTablesInDatabaseFile(const QString& dbName);
		static QStringList GetSQLiteDataTypesForFormat(const QString& format);
	};

} //namespace SynGlyphX

#endif //SYNGLYPHX_DATABASESEINFO_H