#ifndef DATABASESERVICES_H
#define DATABASESERVICES_H

#include "sgxdatatransform_global.h"
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtSql/QSqlDatabase>
#include "datasource.h"
#include "datatransformmapping.h"
#include <boost/uuid/uuid.hpp>
#include "inputfield.h"

namespace SynGlyphX {

	class SGXDATATRANSFORM_EXPORT DatabaseServices
	{
	public:
		DatabaseServices();
		~DatabaseServices();

		static void RegisterCustomDrivers();

		static bool IsSQLiteDB(const QString& filename);

		static QString GetFormattedDBName(const QSqlDatabase& db);
		static QString GetFormattedDBName(const boost::uuids::uuid& databaseID);

		static QStringList GetListOfTablesWithoutAutogeneratedTables(const QSqlDatabase& db);
		static QStringList GetListOfTablesWithoutAutogeneratedTablesInDatabaseFile(const QString& dbName);

		static QString GetQtDBType(const SynGlyphX::Datasource& datasource);

		static void AddDatabaseConnection(const Datasource& datasource, const boost::uuids::uuid& datasourceID);
		static void AddDatabaseConnections(const DatasourceMaps& datasources);
		static void ClearDatabaseConnections(const DatasourceMaps& datasources);

		static QVariantList RunSqlQuery(const InputField& inputfield);

	private:

	};

} //namespace SynGlyphX

#endif //DATABASESERVICES_H